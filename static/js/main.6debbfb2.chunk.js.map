{"version":3,"sources":["components/card/card_component.jsx","components/card_list/card_list_component.jsx","components/search-box/search_box_component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","users","id","src","name","email","CardList","map","user","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAEaA,EAAO,SAACC,GAAD,OACnB,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAKF,EAAMG,MAAMC,GAAIC,IAAG,+BAA0BL,EAAMG,MAAMC,GAAtC,4BAC7B,6BAAKJ,EAAMG,MAAMG,OACjB,6BAAKN,EAAMG,MAAMI,YCFNC,G,MAAW,SAACR,GAAD,OACvB,qBAAKC,UAAU,YAAf,SAEUD,EAAMG,MAAMM,KAAK,SAAAC,GAAI,OAAK,cAAC,EAAD,CAAoBP,MAAOO,GAAhBA,EAAKN,WCHxCO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACxB,uBAAOZ,UAAU,aAAaa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCqClEG,G,wDAlCb,aAAc,IAAD,8BACX,gBAQJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAPtC,EAAKC,MAAQ,CACXnB,MAAM,GACNgB,YAAY,IALH,E,qDAcf,WAAoB,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAArB,GAAK,OAAI,EAAKe,SAAS,CAACf,MAAMA,S,oBAGtC,WAAQ,MAEsBwB,KAAKL,MAA1BnB,EAFD,EAECA,MAAMgB,EAFP,EAEOA,YACPS,EAAgBzB,EAAM0B,QAAO,SAAA1B,GAAK,OAAIA,EAAMG,KAAKwB,cAAcC,SAASZ,EAAYW,kBAC1F,OACE,sBAAK7B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,uBACA,cAAC,EAAD,CAAWW,YAAY,SAASC,aAAcc,KAAKd,eACnD,cAAC,EAAD,CAAUV,MAAOyB,W,GA9BPI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6debbfb2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card-style.css';\r\nexport const Card = (props) => (\r\n\t<div className=\"card-container\">\r\n\t\t<img alt={props.users.id} src={`https://robohash.org/${props.users.id}?set=set3&size=180x180`}/>\r\n\t\t<h2>{props.users.name}</h2>\r\n\t\t<h3>{props.users.email}</h3>\r\n\t</div>\r\n);\r\n","import React from 'react';\r\nimport {Card} from '../card/card_component';\r\nimport './card_list_style.css';\r\n\r\nexport const CardList = (props) => (\r\n\t<div className='card-list'>\r\n\t\t{\r\n           props.users.map( user => (<Card key={user.id} users={user}/>))\r\n        }\r\n\t</div>\r\n);","import React from 'react';\r\nimport '../search-box/search-box.css';\r\n\r\n//destrcuturing the props from the object\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n\t<input className=\"search-box\" type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n);\r\n/*functional components have no access to life-cycle methods,constructor,state*/\r\n/*functional components accepts the props and return some HTML*/","import React,{Component} from 'react';//{Component} in the curly braces destructure.\nimport {CardList} from './components/card_list/card_list_component';//custom component\nimport {SearchBox} from './components/search-box/search_box_component';\nimport './App.css';\n\n/*if we don't destructure we can also use Component as React.Component*/\nclass App extends Component{/*class component*/\n\n  constructor(){\n    super();// to inherit the constructor properties of Component.\n\n    this.state = {\n      users:[],\n      searchField:''\n    };\n  }\n\nhandleChange = (event) => {\n  this.setState({searchField:event.target.value});\n}\n\n//Life Cycles\ncomponentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json()  /*converting response to json format*/)\n    .then(users => this.setState({users:users}))\n  }\n\n  render(){\n    //destructuring objects from state\n    const {users,searchField} = this.state;\n    const filteredUsers = users.filter(users => users.name.toLowerCase().includes(searchField.toLowerCase()))\n    return(\n      <div className=\"App\">\n        <h1 className=\"heading\">Robo Gang</h1>\n        <SearchBox placeholder=\"search\" handleChange={this.handleChange}/>\n        <CardList users={filteredUsers}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*When ever the state is changed the react will re-render the component*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}